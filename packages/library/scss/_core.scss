/*! Remarkability v0.9.0 | MIT License | https://github.com/Microflash/remarkability */
@charset 'UTF-8';
@use 'variables';
@use 'mixins';

$root: '.remarkability' !default;

#{$root} {
  line-height: variables.$line-height;
  font-size: variables.$font-size-base;
  font-weight: variables.$weight-normal;

  @if variables.$enable-text-inflation {
    text-size-adjust: variables.$text-size-adjust;
  }

  @if variables.$enable-custom-colors {
    background-color: variables.$background-body;
    color: variables.$text;
  }

  @if variables.$enable-custom-fonts {
    @include mixins.font('base');
  }

  @if variables.$enable-font-smoothing {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
  }

  text-rendering: optimizeLegibility;

  @include mixins.context($selector: $root) {
    // Inline

    * {
      @if variables.$enable-multiline-wrap {
        box-decoration-break: clone;
      }

      @if variables.$enable-custom-scrollbar {
        &::-webkit-scrollbar,
        &::-webkit-scrollbar-track {
          background-color: variables.$background-scrollbar;
        }
    
        &::-webkit-scrollbar-thumb {
          background-color: variables.$scrollbar;
        }
    
        scrollbar-color: variables.$scrollbar variables.$background-scrollbar;
      }

      @if variables.$enable-smooth-scrolling {
        scroll-behavior: smooth;
    
        @media screen and (prefers-reduced-motion: true) { 
          scroll-behavior: auto;
        }
      }

      @if variables.$enable-selection-background {
        &::-moz-selection { 
          background: variables.$background-selected;
        }
        
        &::selection { 
          background: variables.$background-selected;
        }
      }
    }

    a {
      text-decoration: none;
      cursor: pointer;

      @if variables.$enable-custom-colors {
        color: variables.$link;

        @if variables.$enable-active-links {
          &:focus, 
          &:hover {
            color: variables.$link-active;
          }
        }

        @if variables.$enable-visited-links {
          &:visited {
            color: variables.$link-visited;
          }
        }
      }

      @if variables.$enable-link-underline {
        text-decoration: underline;
      } @else {
        &:focus,
        &:hover {
          text-decoration: underline;
        }
      }

      &:active,
      &:hover {
        outline-width: 0;
      }
    }

    abbr {
      text-decoration: underline dotted;
      cursor: help;
    }
  
    cite {
      font-style: italic;
    }

    hr {
      background: variables.$border-color;
      border: none;
      display: block;
      height: 1px;
      margin-bottom: variables.$margin;
      margin-top: variables.$margin;
    }

    img {
      vertical-align: text-bottom;
  
      @if variables.$enable-media-radius {
        border-radius: variables.$media-radius;
      }
    }

    mark,
    ins {
      border-radius: variables.$radius;
      padding: 0em 0.4em 0.2em;
      vertical-align: baseline;
    }

    ins {
      background-color: variables.$background-ins;
      text-decoration: none;
    }

    mark {
      background-color: variables.$background-mark;
    }

    summary {
      display: list-item;
    }

    details {
      display: block;
  
      summary {
        cursor: pointer;
      }
    }
  
    small {
      font-size: variables.$font-size-small;
    }

    strong {
      font-weight: variables.$weight-bold;
  
      @if variables.$enable-custom-colors {
        color: variables.$text-bold;
      }
    }
  
    sub,
    sup {
      font-size: variables.$font-size-small;
    }
  
    sub {
      vertical-align: sub;
    }
  
    sup {
      vertical-align: super;
    }

    // Blocks

    p,
    dl,
    ol,
    ul,
    blockquote,
    div,
    pre,
    table {
      margin-bottom: variables.$margin;

      &:last-child {
        margin-bottom: 0;
      }
    }

    p {
      &:empty {
        display: none;
      }
    }

    // Headings
    
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      font-weight: variables.$weight-headings;
      line-height: 1.2;

      &:first-child {
        margin-top: 0;
      }

      @if variables.$enable-custom-colors {
        color: variables.$text-headings;
      }
    }

    h1 {
      @include mixins.heading($font-size: 2.2, $with-border: true);

      line-height: 1.5;
    }
  
    h2 {
      @include mixins.heading($font-size: 1.5, $with-border: true);

      line-height: 1.4;
    }
  
    h3 {
      @include mixins.heading($font-size: 1.3, $with-border: true);
    }
  
    h4 {
      @include mixins.heading($font-size: 1.2);
    }
  
    h5 {
      @include mixins.heading($font-size: 1.1);
    }
  
    h6 {
      @include mixins.heading($font-size: 1);
    }

    h1 + * {
      margin-top: 1.5rem;
    }

    h2 + *,
    h3 + *,
    h4 + * {
      margin-top: 0;
    }

    // Lists

    @if variables.$enable-compact-lists {
      p {
        & + dl,
        & + ol,
        & + ul {
          margin-top: -(variables.$margin);
        }
      }
    }

    ol,
    ul,
    dd {
      margin-left: variables.$margin;

      @if variables.$enable-multiline-wrap {
        & > * {
          box-decoration-break: clone;
        }
      }
    }
  
    ol,
    ul {
      list-style-position: outside;
    }
  
    ol {
      list-style-type: decimal;
  
      ol {
        list-style-type: lower-alpha;
  
        ol {
          list-style-type: lower-roman;
  
          ol {
            list-style-type: lower-greek;
  
            ol {
              list-style-type: decimal;
  
              ol {
                list-style-type: lower-alpha;
              }
            }
          }
        }
      }
    }
  
    ul {
      list-style-type: disc;
  
      ul {
        list-style-type: circle;
  
        ul {
          list-style-type: square;
  
          ul {
            list-style-type: circle;
  
            ul {
              list-style-type: disc;
  
              ul {
                list-style-type: circle;
              }
            }
          }
        }
      }
    }

    // Form

    input,
    textarea {
      font: inherit;
      line-height: inherit;

      @if variables.$enable-custom-colors {
        color: variables.$text;
      }

      &::placeholder {
        color: inherit;
        opacity: variables.$opacity;
      }
    }

    // Blockquote

    blockquote {
      border-left: 2px solid variables.$border-color;
      padding: 0.5em 1em;
  
      @if variables.$enable-custom-colors {
        color: variables.$text-blockquote;
      }
    }

    // Code

    code,
    kbd,
    samp,
    pre {
      -moz-osx-font-smoothing: auto;
      -webkit-font-smoothing: auto;
      background-color: variables.$background-code;
      color: variables.$text;
      font-size: variables.$font-size-code;
      border-radius: variables.$radius;

      @if variables.$enable-custom-fonts {
        @include mixins.font('code');
      }
    }

    code,
    kbd,
    samp {
      padding: 0.2em 0.4em 0.2em;

      @if variables.$enable-custom-colors {
        color: variables.$text-code;
      }
    }

    pre {
      overflow: hidden;

      @if variables.$enable-block-radius {
        border-radius: variables.$block-radius;
      }

      code {
        display: block;
        background: none;
        overflow: auto;
        border: none;
        padding: 1em 1.2em;
        font-size: 1em;
        white-space: pre;
      }
    }

    // Figure

    figure {
      margin-bottom: variables.$margin * 2;
      text-align: center;
  
      &:first-child {
        margin-top: 0;
      }
  
      &:last-child {
        margin-bottom: 0;
      }
    }
  
    figcaption {
      font-size: variables.$font-size-small;
      margin-top: variables.$margin / 1.6;
  
      @if variables.$enable-custom-colors {
        color: variables.$text-muted;
      }
    }

    // Table

    table {
      border-collapse: collapse;
      border-spacing: 0;
      width: 100%;

      // scroll tables horizontally on small screens
      @if variables.$enable-responsive-tables {
        display: block;
        overflow-x: auto;
      }
  
      pre {
        white-space: pre-wrap;
      }
    }
  
    th,
    td {
      @include mixins.cell($font-size: 1);
  
      border: 1px solid variables.$border-color;
      line-height: 1.4;
    }
  
    thead,
    tfoot {
      tr {
        @if variables.$enable-table-stripes {
          background-color: variables.$border-color;
        } @else {
          background-color: variables.$background-table-hover;
        }
      }
  
      th,
      td {
        @include mixins.cell($font-size: 0.9);
  
        @if variables.$enable-custom-colors {
          color: variables.$table-thead;
        }
  
        code {
          background-color: variables.$background-table;
        }
      }
    }
  
    tbody {
      tr {
        background-color: variables.$background-table;
  
        @if variables.$enable-table-stripes {
          &:nth-child(even) {
            background-color: variables.$background-table-even;
          }
  
          @if variables.$enable-table-hover {
            &:hover {
              background-color: variables.$background-table-hover;
            }
          }
        } @else {
          @if variables.$enable-table-hover {
            &:hover {
              background-color: variables.$background-table-even;
            }
          }
        }
      }
    }
  }
}
